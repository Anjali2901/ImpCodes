#include <stdio.h>
#include <stdlib.h>
#include <limits.h>
long long int ti=0;
int a[1001][1001];
int Min(int a, int b, int c, int d)
{
    int x,y;
    ti+=4;
    x = (a < b)?a:b;
    y = (c < d)?c:d;
    return (x<y?x:y);
}

int Max(int a, int b, int c, int d)
{
    int x,y;
    ti+=4;
    x = (a > b)?a:b;
    y = (c > d)?c:d;
    return (x>y?x:y);
}

int findmax(int lower_r , int upper_r, int lower_c, int upper_c)
{
	ti+=3;
    if(lower_r == upper_r && lower_c == upper_c)
    {
		ti+=3;//2 for fetching and 1 for storing
        return a[lower_r][lower_c];
    }
    else if(lower_r <= upper_r && lower_c <= upper_c)
    {
    	ti+=4;
        int mid_r = (lower_r + upper_r)/2;
        int mid_c = (lower_c + upper_c)/2;
        ti++;//for storing
        return Max(findmax(lower_r, mid_r,lower_c, mid_c), findmax(mid_r + 1, upper_r, lower_c, mid_c), findmax(lower_r, mid_r, mid_c +1 , upper_c), findmax(mid_r+1, upper_r, mid_c+1, upper_c));
    }
    else
        return INT_MIN;
}

int fun(int lower_r , int upper_r, int lower_c, int upper_c)
{
    if(lower_r == upper_r && lower_c == upper_c)
    {
		ti+=3;
        return a[lower_r][lower_c];
    }
    else if(lower_r <= upper_r && lower_c <= upper_c)
    {
    	ti+=5;
        int mid_r = (lower_r + upper_r)/2;
        int mid_c = (lower_c + upper_c)/2;
        return Min(fun(lower_r, mid_r,lower_c, mid_c), fun(mid_r + 1, upper_r, lower_c, mid_c), fun(lower_r, mid_r, mid_c +1 , upper_c), fun(mid_r+1, upper_r, mid_c+1, upper_c));
    }
    else
        return INT_MAX;
}
int main()
{
    int n,i,j;
    scanf("%d",&n);
    /*for(i = 0; i < n; i++ )
    {
        for(j = 0; j < n; j++)
        {
            scanf("%d",&a[i][j]);
        }
    }*/
    for(i = 0; i < n; i++ )
    {
        for(j = 0; j < n; j++)
        {
            a[i][j]=rand()%10000 +1;
            //printf("%d ",a[i][j]);
        }
        printf("\n");
    }    
    printf("Minimum is %d\n",fun(0,n-1,0,n-1));
    printf("Maximum is %d\n",findmax(0,n-1,0,n-1));
    printf("%d %lld\n",n,ti);
}

